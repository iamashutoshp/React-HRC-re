{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Findal-React\\\\hrc-b2b\\\\src\\\\components\\\\Handler.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { CircularLoading } from '../utils/CircularLoading';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from \"@material-ui/core/Grid\";\nimport GridHRCLogo from \"../utils/GridHRCLogo\";\nimport LvL1 from './LvL1Function/LvL1';\nimport { Button } from '@material-ui/core';\nimport Paging from './Paging';\nimport LvL2_3 from './LvL2_3Function/LvL2_3';\nexport class Handler extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSearch = async event => {\n      console.log(event.target.value);\n\n      if (event.target.value.length >= 1) {\n        await axios.get('http://localhost:8080/1729197/search?s=' + event.target.value + \"&pNo=\" + 1, {}).then(response => {\n          this.setState({\n            seen: true,\n            rows: response.data.data,\n            pageNo: response.data.pageNo,\n            totalPage: response.data.totalSize\n          });\n        });\n      } else {\n        axios.get('http://localhost:8080/1729197/paging?pNo=' + 1, {}).then(response => {\n          console.log(\"----------------------------------\", response);\n          this.setState({\n            seen: true,\n            rows: response.data.data,\n            pageNo: response.data.pageNo,\n            totalPage: response.data.totalSize\n          });\n        });\n      }\n    };\n\n    this.gotoHomePaging = async () => {\n      console.log(\"Ist page of table\");\n\n      if (this.state.pageNo > 1) {\n        await axios.get('http://localhost:8080/1729197/paging?pNo=' + 1, {}).then(response => {\n          this.setState({\n            seen: true,\n            rows: response.data.data,\n            pageNo: response.data.pageNo,\n            totalPage: response.data.totalSize\n          });\n        });\n      }\n    };\n\n    this.goOneBackPaging = async () => {\n      console.log(\"one page back\", this.state.pageNo);\n\n      if (this.state.pageNo - 1 > 0) {\n        await axios.get('http://localhost:8080/1729197/paging?pNo=' + (this.state.pageNo - 1), {}).then(response => {\n          this.setState({\n            seen: true,\n            rows: response.data.data,\n            pageNo: response.data.pageNo,\n            totalPage: response.data.totalSize\n          });\n        });\n      }\n    };\n\n    this.goOnNextPaging = async () => {\n      console.log(\"on next page\", this.state.pageNo);\n\n      if (this.state.pageNo + 1 <= this.state.totalPage) {\n        await axios.get('http://localhost:8080/1729197/paging?pNo=' + (this.state.pageNo + 1), {}).then(response => {\n          this.setState({\n            seen: true,\n            rows: response.data.data,\n            pageNo: response.data.pageNo,\n            totalPage: response.data.totalSize\n          });\n        });\n      }\n    };\n\n    this.gotoLastPage = async () => {\n      console.log(\"last page of table\");\n\n      if (this.state.pageNo < this.state.totalPage && this.state.totalPage > 1) {\n        await axios.get('http://localhost:8080/1729197/paging?pNo=' + this.state.totalPage, {}).then(response => {\n          this.setState({\n            seen: true,\n            rows: response.data.data,\n            pageNo: response.data.pageNo,\n            totalPage: response.data.totalSize\n          });\n        });\n      }\n    };\n\n    this.state = {\n      lvl: props.lvl,\n      rows: [],\n      columns: [],\n      seen: false,\n      selectedRowID: -1,\n      search: '',\n      pageNo: 0,\n      totalPage: 0\n    };\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.goOnNextPaging = this.goOnNextPaging.bind(this);\n    this.goOneBackPaging = this.goOneBackPaging.bind(this);\n    this.gotoHomePaging = this.gotoHomePaging.bind(this);\n    this.gotoLastPage = this.gotoLastPage.bind(this);\n  }\n\n  handleEdit(props) {\n    console.log(\"editing...................\", props.val);\n    console.log(this.state.rows);\n  } // searching functionality below\n\n\n  // pagination handle functions end above\n  // alloting renders case on base on level of the user\n  renderSwitch(param) {\n    switch (param) {\n      case 'Level 2':\n        return /*#__PURE__*/_jsxDEV(LvL2_3, {\n          main: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this);\n\n      case 'Level 3':\n        return /*#__PURE__*/_jsxDEV(LvL2_3, {\n          main: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(LvL1, {\n          main: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this);\n    }\n  } // done with the cases\n\n\n  render() {\n    const {\n      classes\n    } = this.props;\n\n    if (!this.state.seen) {\n      return /*#__PURE__*/_jsxDEV(CircularLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(GridHRCLogo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: \"2px solid\",\n            padding: \"15px\",\n            boxShadow: \"20px 20px 50px 15px grey\",\n            height: \"100%\"\n          },\n          children: [this.renderSwitch(this.state.lvl), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            style: {\n              color: \"orange\",\n              width: \"100%\",\n              flexGrow: 1\n            },\n            direction: \"row\",\n            spacing: 1,\n            alignItems: \"flex-start\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: \"rgb(201, 184, 107)\",\n                flexGrow: 1,\n                border: \"2px solid\",\n                padding: \"15px\",\n                height: \"100%\",\n                width: \"100%\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n                component: Paper,\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  \"aria-label\": \"simple table\",\n                  children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                    style: {\n                      backgroundColor: \"#d4b0f5\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        padding: \"checkbox\",\n                        children: /*#__PURE__*/_jsxDEV(Checkbox // indeterminate={numSelected > 0 && numSelected < rowCount}\n                        // checked={rowCount > 0 && numSelected === rowCount}\n                        // onChange={onSelectAllClick}\n                        // inputProps={{ 'aria-label': 'select all desserts' }}\n                        , {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 228,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 227,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          children: \"Order Date\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 235,\n                          columnNumber: 64\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 235,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"center\",\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          children: \"Approved By\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 236,\n                          columnNumber: 79\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 236,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"center\",\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          children: \"Order ID\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 237,\n                          columnNumber: 79\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 237,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"center\",\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          children: \"Compant Name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 238,\n                          columnNumber: 79\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 238,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"center\",\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          children: \"Company ID\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 239,\n                          columnNumber: 79\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 239,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"center\",\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          children: \"Order Amount\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 240,\n                          columnNumber: 79\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 240,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"center\",\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          children: \"Approval Status\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 241,\n                          columnNumber: 79\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 241,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"center\",\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          children: \"Notes \"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 242,\n                          columnNumber: 79\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 242,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 226,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                    children: this.state.rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n                      style: row.id % 2 ? {\n                        background: \"#e6f3ff\"\n                      } : {\n                        background: \"white\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        padding: \"checkbox\",\n                        children: /*#__PURE__*/_jsxDEV(Checkbox // checked={isItemSelected}\n                        // inputProps={{ 'aria-labelledby': labelId }}\n                        , {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 250,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 249,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        component: \"th\",\n                        scope: \"row\",\n                        children: row.Order_Date\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 255,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"center\",\n                        children: row.Approved_By\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 256,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"center\",\n                        children: row.Order_Id\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 257,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"center\",\n                        children: row.Company_Name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 258,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"center\",\n                        children: row.company_Id\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 259,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"center\",\n                        children: row.Order_amount\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 260,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"center\",\n                        children: row.Approval_status\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 261,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"center\",\n                        children: row.Notes\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 262,\n                        columnNumber: 57\n                      }, this)]\n                    }, row.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 53\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Paging, {\n                main: this\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  componentDidMount() {\n    if (!this.state.seen) {\n      axios.get('http://localhost:8080/1729197/paging?pNo=' + 1, {}).then(response => {\n        console.log(\"----------------------------------\", response);\n        this.setState({\n          seen: true,\n          rows: response.data.data,\n          pageNo: response.data.pageNo,\n          totalPage: response.data.totalSize\n        });\n      });\n    }\n  }\n\n}\nexport default Handler;","map":{"version":3,"sources":["C:/Projects/Findal-React/hrc-b2b/src/components/Handler.js"],"names":["React","Component","axios","CircularLoading","Checkbox","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Grid","GridHRCLogo","LvL1","Button","Paging","LvL2_3","Handler","constructor","props","handleSearch","event","console","log","target","value","length","get","then","response","setState","seen","rows","data","pageNo","totalPage","totalSize","gotoHomePaging","state","goOneBackPaging","goOnNextPaging","gotoLastPage","lvl","columns","selectedRowID","search","handleEdit","bind","val","renderSwitch","param","render","classes","border","padding","boxShadow","height","color","width","flexGrow","backgroundColor","map","row","id","background","Order_Date","Approved_By","Order_Id","Company_Name","company_Id","Order_amount","Approval_status","Notes","componentDidMount"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport { CircularLoading } from '../utils/CircularLoading'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport GridHRCLogo from \"../utils/GridHRCLogo\";\r\nimport LvL1 from './LvL1Function/LvL1'\r\nimport { Button } from '@material-ui/core';\r\nimport Paging from './Paging'\r\n\r\nimport LvL2_3 from './LvL2_3Function/LvL2_3'\r\n\r\nexport class Handler extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            lvl: props.lvl,\r\n            rows: [],\r\n            columns: [],\r\n            seen: false,\r\n            selectedRowID: -1,\r\n            search: '',\r\n            pageNo: 0,\r\n            totalPage: 0\r\n        }\r\n\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n        this.goOnNextPaging = this.goOnNextPaging.bind(this);\r\n        this.goOneBackPaging = this.goOneBackPaging.bind(this);\r\n        this.gotoHomePaging = this.gotoHomePaging.bind(this);\r\n        this.gotoLastPage = this.gotoLastPage.bind(this);\r\n\r\n    }\r\n\r\n    handleEdit(props) {\r\n        console.log(\"editing...................\", props.val)\r\n        console.log(this.state.rows)\r\n    }\r\n\r\n    // searching functionality below\r\n    handleSearch = async (event) => {\r\n\r\n        console.log(event.target.value)\r\n\r\n        if (event.target.value.length >= 1) {\r\n            await axios.get('http://localhost:8080/1729197/search?s=' + event.target.value + \"&pNo=\" + 1, {\r\n            })\r\n                .then((response) => {\r\n                    this.setState({\r\n                        seen: true,\r\n                        rows: response.data.data,\r\n                        pageNo: response.data.pageNo,\r\n                        totalPage: response.data.totalSize\r\n                    })\r\n                })\r\n        }\r\n        else {\r\n            axios.get('http://localhost:8080/1729197/paging?pNo=' + 1, {\r\n            })\r\n                .then((response) => {\r\n                    console.log(\"----------------------------------\", response);\r\n                    this.setState({\r\n                        seen: true,\r\n                        rows: response.data.data,\r\n                        pageNo: response.data.pageNo,\r\n                        totalPage: response.data.totalSize\r\n                    })\r\n                })\r\n        }\r\n\r\n\r\n    }\r\n    // searching functionality done above\r\n\r\n\r\n\r\n\r\n    // pagination handle functions start below\r\n    gotoHomePaging = async () => {\r\n        console.log(\"Ist page of table\")\r\n        if (this.state.pageNo > 1) {\r\n            await axios.get('http://localhost:8080/1729197/paging?pNo=' + 1, {\r\n            })\r\n                .then((response) => {\r\n                    this.setState({\r\n                        seen: true,\r\n                        rows: response.data.data,\r\n                        pageNo: response.data.pageNo,\r\n                        totalPage: response.data.totalSize\r\n                    })\r\n                })\r\n        }\r\n    }\r\n\r\n    goOneBackPaging = async () => {\r\n        console.log(\"one page back\", this.state.pageNo)\r\n        if (this.state.pageNo - 1 > 0) {\r\n            await axios.get('http://localhost:8080/1729197/paging?pNo=' + (this.state.pageNo - 1), {\r\n            })\r\n                .then((response) => {\r\n                    this.setState({\r\n                        seen: true,\r\n                        rows: response.data.data,\r\n                        pageNo: response.data.pageNo,\r\n                        totalPage: response.data.totalSize\r\n                    })\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    goOnNextPaging = async () => {\r\n        console.log(\"on next page\", this.state.pageNo)\r\n        if (this.state.pageNo + 1 <= this.state.totalPage) {\r\n            await axios.get('http://localhost:8080/1729197/paging?pNo=' + (this.state.pageNo + 1), {\r\n            })\r\n                .then((response) => {\r\n                    this.setState({\r\n                        seen: true,\r\n                        rows: response.data.data,\r\n                        pageNo: response.data.pageNo,\r\n                        totalPage: response.data.totalSize\r\n                    })\r\n                })\r\n        }\r\n    }\r\n\r\n    gotoLastPage = async () => {\r\n        console.log(\"last page of table\")\r\n        if (this.state.pageNo < this.state.totalPage && this.state.totalPage > 1) {\r\n            await axios.get('http://localhost:8080/1729197/paging?pNo=' + this.state.totalPage, {\r\n            })\r\n                .then((response) => {\r\n                    this.setState({\r\n                        seen: true,\r\n                        rows: response.data.data,\r\n                        pageNo: response.data.pageNo,\r\n                        totalPage: response.data.totalSize\r\n                    })\r\n                })\r\n        }\r\n    }\r\n    // pagination handle functions end above\r\n\r\n\r\n    // alloting renders case on base on level of the user\r\n    renderSwitch(param) {\r\n\r\n        switch (param) {\r\n            case 'Level 2':\r\n                return (\r\n                    <LvL2_3 main={this} />\r\n                );\r\n            case 'Level 3':\r\n                return (\r\n                    <LvL2_3 main={this} />\r\n                );\r\n            default:\r\n                return (\r\n                    <LvL1 main={this} />\r\n                );\r\n        }\r\n    }\r\n\r\n    // done with the cases\r\n\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        if (!this.state.seen) {\r\n            return (\r\n                <CircularLoading />\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <GridHRCLogo />\r\n                    <div\r\n                        style={{\r\n                            border: \"2px solid\",\r\n                            padding: \"15px\",\r\n                            boxShadow: \"20px 20px 50px 15px grey\",\r\n                            height: \"100%\"\r\n                        }}>\r\n                        {this.renderSwitch(this.state.lvl)}\r\n                        <Grid\r\n                            container\r\n                            style={{\r\n                                color: \"orange\",\r\n                                width: \"100%\",\r\n                                flexGrow: 1\r\n                            }}\r\n                            direction=\"row\"\r\n                            spacing={1}\r\n                            alignItems=\"flex-start\">\r\n                            <Grid item xs={12} />\r\n                            <Grid item xs={12} />\r\n                            <div\r\n                                style={{\r\n                                    color: \"rgb(201, 184, 107)\",\r\n                                    flexGrow: 1,\r\n                                    border: \"2px solid\",\r\n                                    padding: \"15px\",\r\n                                    height: \"100%\",\r\n                                    width: \"100%\"\r\n                                }}>\r\n                                <TableContainer component={Paper}>\r\n                                    <Table\r\n                                        aria-label=\"simple table\">\r\n                                        <TableHead style={{\r\n                                            backgroundColor: \"#d4b0f5\"\r\n                                        }}>\r\n                                            <TableRow>\r\n                                                <TableCell padding=\"checkbox\">\r\n                                                    <Checkbox\r\n                                                        // indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                                                        // checked={rowCount > 0 && numSelected === rowCount}\r\n                                                        // onChange={onSelectAllClick}\r\n                                                        // inputProps={{ 'aria-label': 'select all desserts' }}\r\n                                                    />\r\n                                                    </TableCell>\r\n                                                    <TableCell><b>Order Date</b></TableCell>\r\n                                                    <TableCell align=\"center\"><b>Approved By</b></TableCell>\r\n                                                    <TableCell align=\"center\"><b>Order ID</b></TableCell>\r\n                                                    <TableCell align=\"center\"><b>Compant Name</b></TableCell>\r\n                                                    <TableCell align=\"center\"><b>Company ID</b></TableCell>\r\n                                                    <TableCell align=\"center\"><b>Order Amount</b></TableCell>\r\n                                                    <TableCell align=\"center\"><b>Approval Status</b></TableCell>\r\n                                                    <TableCell align=\"center\"><b>Notes </b></TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                            <TableBody>\r\n                                                {this.state.rows.map((row) => (\r\n                                                    <TableRow key={row.id}\r\n                                                        style={row.id % 2 ? { background: \"#e6f3ff\" } : { background: \"white\" }}>\r\n                                                        <TableCell padding=\"checkbox\">\r\n                                                            <Checkbox\r\n                                                            // checked={isItemSelected}\r\n                                                            // inputProps={{ 'aria-labelledby': labelId }}\r\n                                                            />\r\n                                                        </TableCell>\r\n                                                        <TableCell component=\"th\" scope=\"row\">{row.Order_Date}</TableCell>\r\n                                                        <TableCell align=\"center\">{row.Approved_By}</TableCell>\r\n                                                        <TableCell align=\"center\">{row.Order_Id}</TableCell>\r\n                                                        <TableCell align=\"center\">{row.Company_Name}</TableCell>\r\n                                                        <TableCell align=\"center\">{row.company_Id}</TableCell>\r\n                                                        <TableCell align=\"center\">{row.Order_amount}</TableCell>\r\n                                                        <TableCell align=\"center\">{row.Approval_status}</TableCell>\r\n                                                        <TableCell align=\"center\">{row.Notes}</TableCell>\r\n                                                    </TableRow>\r\n                                                ))}\r\n                                            </TableBody>\r\n\r\n                                    </Table>\r\n                                </TableContainer>\r\n                                    <br />\r\n                                    <Paging main={this} />\r\n                                    {/* <Button>page</Button> */}\r\n                            </div>\r\n                        </Grid>\r\n                    </div>\r\n                    </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.state.seen) {\r\n                        axios.get('http://localhost:8080/1729197/paging?pNo=' + 1, {\r\n                        })\r\n                            .then((response) => {\r\n                                console.log(\"----------------------------------\", response);\r\n                                this.setState({\r\n                                    seen: true,\r\n                                    rows: response.data.data,\r\n                                    pageNo: response.data.pageNo,\r\n                                    totalPage: response.data.totalSize\r\n                                })\r\n                            })\r\n                    }\r\n    }\r\n}\r\nexport default Handler\r\n"]},"metadata":{},"sourceType":"module"}